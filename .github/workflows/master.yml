name: build and deploy

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: fetch source code
        uses: actions/checkout@v2

      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: 12.18.3

      - name: node cache
        uses: actions/cache@v2.1.6
        env:
          cache-name: modules-node
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          # Caching dependencies https://docs.github.com/en/free-pro-team@latest/actions/guides/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: yarn install --frozen-lockfile

      - name: build
        run: yarn build && yarn export
        env:
          NODE_ENV: dev

      - name: deploy
        uses: docker://amazon/aws-cli:2.1.18
        with:
          args: s3 sync out s3://facet.ninja/ --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"

      - name: cloudfront cache
        uses: docker://amazon/aws-cli:2.1.18
        with:
          args: cloudfront create-invalidation --distribution-id E22O0I4OF7A1X --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
